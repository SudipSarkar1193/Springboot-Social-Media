## Azure SQL Datasource
#spring.datasource.url=${DATA_SRC_URL};encrypt=true;trustServerCertificate=true;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#
## Hibernate / JPA
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=false

## ===============================
## MySQL Datasource Configuration
## ===============================
#spring.datasource.url=jdbc:mysql://localhost:3306/xplore_db
#
## Your MySQL username and password
#spring.datasource.username=root
#spring.datasource.password=root
#
## This tells Hibernate to generate MySQL-specific SQL commands
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
## --- Keep these settings as they are ---
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.session.store-type=jdbc
#spring.session.jdbc.initialize-schema=always



# Full JDBC URL provided by Neon, loaded from an environment variable
spring.datasource.url=${DATA_SRC_URL}

# Database credentials, loaded from environment variables
# Note: Ensure your environment variables are named PGUSER and PGPASSWORD
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}

# Specifies the PostgreSQL driver
spring.datasource.driver-class-name=org.postgresql.Driver

# Tells Hibernate to use the PostgreSQL-specific SQL dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Production-safe setting: validates the schema against entities without changing it
spring.jpa.hibernate.ddl-auto=validate

# Hides SQL statements from logs for a cleaner production output
spring.jpa.show-sql=false

# --- Spring Session Configuration ---
# Uses JDBC to store session data
spring.session.store-type=jdbc

# Prevents Spring from trying to create session tables on startup
spring.session.jdbc.initialize-schema=never